https://confluence.community.veritas.com/pages/viewpage.action?spaceKey=SNAS&title=SNAS+coding+practices
****************************************************************************************************************

we are proposing to enforce squashing of multiple commits in the feature branch and rebase of the feature branch on top of the dev branch before doing a merge to dev.

To Squash commits :
**********************
Squashing commit means, merging multiple commits together and creating a new one before merging them to dev branch

Rebase the feature branch on top of the latest dev branch.
----------------------------------------------------------------- 
Step 1 : Checkout to dev branch : bash-4.1$ git checkout dev

Step 2: Pull changes from remote dev branch into local dev branch :	bash-4.1$ git pull origin dev

Step 3: Go to the feature branch and do a rebase. : 
---------------------------------------------------
bash-4.1$ git checkout <feature_branch>
bash-4.1$ git rebase dev

If there are merge conflicts, edit the files and fix the conflicts (look for ‘<<<’ in the files) and then do “git add file_name” on all the edited files.  Then finish the rebase 
bash-4.1$ git rebase --continue

***Squashing multiple commits in the feature branch to a single commit:

Step 4: $ git log --author=Jaynath.Kumar --oneline

Step 5: To Squash commits :
-------------------------
bash-4.1$ git rebase -i HEAD~3

Step 5: Rename ‘pick’ to ‘squash’ in the text editor, Do not rename all commits from 'pick' to 'squash', keep topmost commit as it is like pick and rename all other commits from pick to sqush. and save it using :wq!

Step 6: Push the changes to remote repositories :
bash-4.1$git push -f origin <feature_branch_name>

Step 7: Optional step if you want to reset abort :
****************************************************
git reset --abort


For empty build trigger :

git commit --allow-empty -m "IA-31256 Trigger Build"


When you get this git error while cloning the code from remote git repo, then how to handle this :
************************************************************************************************************
$ git clone https://stash.veritas.com/scm/iastorage/sfnas.git --depth 1
Cloning into 'sfnas'...
remote: Enumerating objects: 17820, done.
remote: Counting objects: 100% (17820/17820), done.
remote: Compressing objects: 100% (13103/13103), done.
remote: Total 17820 (delta 5859), reused 10736 (delta 3879)iB/s
Receiving objects: 100% (17820/17820), 63.32 MiB | 268.00 KiB/s, done.
Resolving deltas: 100% (5859/5859), done.
Updating files: 100% (15891/15891), done.

Solution :
***********

The idea is to do a shallow clone first and then update the repository with its history.
$ git config --global core.compression 0
$ git clone http://github.com/large-repository --depth 1
$ cd large-repository
$ git fetch --unshallow
$ git pull --all


It happens more often than not, I am on a slow internet connection and I have to clone a decently-huge git repository. The most common issue is that the connection closes and the whole clone is cancelled.

Cloning into 'large-repository'...
remote: Counting objects: 20248, done.
remote: Compressing objects: 100% (10204/10204), done.
error: RPC failed; curl 18 transfer closed with outstanding read data remaining 
fatal: The remote end hung up unexpectedly
fatal: early EOF
fatal: index-pack failed
After a lot of trial and errors and a lot of “remote end hung up unexpectedly” I have a way that works for me. The idea is to do a shallow clone first and then update the repository with its history.

$ git clone http://github.com/large-repository --depth 1
$ cd large-repository
$ git fetch --unshallow
