#
# $Id$
#
# _WATERMARK_NOT_REQ_
#
# $Copyright: Copyright (c) 2022 Veritas Technologies LLC.
# All rights reserved.
#
# THIS SOFTWARE CONTAINS CONFIDENTIAL INFORMATION AND TRADE SECRETS OF
# VERITAS TECHNOLOGIES LLC. USE, DISCLOSURE OR REPRODUCTION IS PROHIBITED
# WITHOUT THE PRIOR EXPRESS WRITTEN PERMISSION OF VERITAS TECHNOLOGIES LLC.
#
# The  Licensed  Software  and  Documentation  are  deemed  to be commercial
# computer  software  as  defined  in  FAR  12.212 and subject to restricted
# rights  as  defined in FAR Section 52.227-19 "Commercial Computer Software
# - Restricted  Rights"  and  DFARS 227.7202,  et seq.  "Commercial Computer
# Software  and  Commercial Computer Software Documentation," as applicable,
# and any successor regulations, whether delivered by Veritas as on premises
# or  hosted  services.  Any  use,  modification,  reproduction  release,
# performance,  display  or  disclosure  of  the  Licensed  Software  and
# Documentation by the U.S. Government shall be solely in accordance with
# the terms of this Agreement. $
#
FROM ubuntu:latest
MAINTAINER Jaynath.Kumar <Jaynath.Kumar@veritas.com>

ENV HOME /home/jenkins

LABEL Description="This is ubuntu based docker image to run robot framwork tests for python 3.8 version"

RUN groupadd -g 10000 jenkins  && useradd -u 10000 -g jenkins jenkins && mkdir -p $HOME
RUN chown -R jenkins:jenkins $HOME

# Application version for reference

ENV UBUNTU_VERSION=20.0 \
    PYTHON_VERSION=3.8.2 \
    CHROME_BROWSER_VERSION=85.0.4183.121

ARG CHROME_DRIVER_VERSION=85.0.4183.87
ARG FIREFOX_VERSION=81.0
ARG GECKODRIVER_VERSION=0.27.0


# Install essential packages and xvfb
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
    software-properties-common \
    unzip \
    curl \
    git  \
    xvfb \
    tzdata \
    openjdk-8-jdk

# Set java home
ENV JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java


# Install python and other dependecines to run selenkum based robot framework tests
RUN add-apt-repository universe && apt update \
    &&  apt-get update &&  apt-get install -y \
    python3 python3-pip python-setuptools \
    && pip3 install --no-cache-dir robotframework robotframework-seleniumlibrary paramiko robotframework-sshlibrary robotframework-stringformat robotframework-yamllibrary netaddr


# Install Chrome browser
RUN curl https://dl-ssl.google.com/linux/linux_signing_key.pub -o /tmp/google.pub \
    && cat /tmp/google.pub | apt-key add -; rm /tmp/google.pub \
    && echo 'deb http://dl.google.com/linux/chrome/deb/ stable main' > /etc/apt/sources.list.d/google.list \
    && mkdir -p /usr/share/desktop-directories \
    && apt-get -y update && apt-get install -y google-chrome-stable

# Disable the SUID sandbox so that chrome can launch without being in a privileged container
RUN dpkg-divert --add --rename --divert /opt/google/chrome/google-chrome.real /opt/google/chrome/google-chrome \
    && echo "#!/bin/bash\nexec /opt/google/chrome/google-chrome.real --no-sandbox --disable-setuid-sandbox \"\$@\"" > /opt/google/chrome/google-chrome \
    && chmod 755 /opt/google/chrome/google-chrome

# Install Chrome Driver
RUN mkdir -p /opt/selenium \
    && curl http://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip -o /opt/selenium/chromedriver_linux64.zip \
    && cd /opt/selenium; unzip /opt/selenium/chromedriver_linux64.zip; rm -rf chromedriver_linux64.zip; ln -fs /opt/selenium/chromedriver /usr/local/bin/chromedriver;

# Install Firefox browser
RUN apt-get install -y firefox

# Gecko Driver
RUN wget --no-verbose -O /tmp/geckodriver.tar.gz https://github.com/mozilla/geckodriver/releases/download/v$GECKODRIVER_VERSION/geckodriver-v$GECKODRIVER_VERSION-linux64.tar.gz \
  && rm -rf /opt/geckodriver \
  && tar -C /opt -zxf /tmp/geckodriver.tar.gz \
  && rm /tmp/geckodriver.tar.gz \
  && mv /opt/geckodriver /opt/geckodriver-$GECKODRIVER_VERSION \
  && chmod 755 /opt/geckodriver-$GECKODRIVER_VERSION \
  && ln -fs /opt/geckodriver-$GECKODRIVER_VERSION /usr/bin/geckodriver \
  && ln -fs /opt/geckodriver-$GECKODRIVER_VERSION /usr/bin/wires

USER jenkins
WORKDIR /home/jenkins
