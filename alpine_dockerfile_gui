#
# $Id$
#
# _WATERMARK_NOT_REQ_
#
# $Copyright: Copyright (c) 2022 Veritas Technologies LLC.
# All rights reserved.
#
# THIS SOFTWARE CONTAINS CONFIDENTIAL INFORMATION AND TRADE SECRETS OF
# VERITAS TECHNOLOGIES LLC. USE, DISCLOSURE OR REPRODUCTION IS PROHIBITED
# WITHOUT THE PRIOR EXPRESS WRITTEN PERMISSION OF VERITAS TECHNOLOGIES LLC.
#
# The  Licensed  Software  and  Documentation  are  deemed  to be commercial
# computer  software  as  defined  in  FAR  12.212 and subject to restricted
# rights  as  defined in FAR Section 52.227-19 "Commercial Computer Software
# - Restricted  Rights"  and  DFARS 227.7202,  et seq.  "Commercial Computer
# Software  and  Commercial Computer Software Documentation," as applicable,
# and any successor regulations, whether delivered by Veritas as on premises
# or  hosted  services.  Any  use,  modification,  reproduction  release,
# performance,  display  or  disclosure  of  the  Licensed  Software  and
# Documentation by the U.S. Government shall be solely in accordance with
# the terms of this Agreement. $
#
FROM alpine:3.12
MAINTAINER Jaynath.kumar <Jaynath.Kumar@veritas.com>

ENV HOME /home/jenkins
RUN addgroup -S -g 10000 jenkins
RUN adduser -S -u 10000 -h $HOME -G jenkins jenkins
RUN chown jenkins:jenkins $HOME

LABEL Description="This is alpine based docker image to run robot framwork tests for python 3.8 version"

# Application Versions for reference

ENV ALPINE_VERSION=3.12 \
    PYTHON_VERSION=3.8 \
    CHROMIUM_BROWSER_VERSION=83.0.4103.116 \
    CHROME_DRIVER_VERSION=83.0.4103.116 \
    FIREFOX_VERSION=81.0 \
    GECKODRIVER_VERSION=0.27.0

# Add main & community alpine repositories

RUN echo "http://dl-cdn.alpinelinux.org/alpine/v$ALPINE_VERSION/main" >> /etc/apk/repositories \
    && echo "http://dl-cdn.alpinelinux.org/alpine/v$ALPINE_VERSION/community" >> /etc/apk/repositories

RUN apk add --update --no-cache curl bash git openssh-client openjdk8 zip wget xvfb gcc libressl-dev musl-dev libffi-dev \
  # Installing python and robotframework packages required to run selenium tests
  && apk add --update --no-cache python3 python3-dev py-pip build-base py-setuptools \
  && pip install --no-cache-dir robotframework robotframework-seleniumlibrary paramiko robotframework-sshlibrary robotframework-stringformat robotframework-yamllibrary netaddr

# Installs latest Chromium and chrome driver packages
RUN apk add --update --no-cache chromium chromium-chromedriver

RUN mkdir -p /opt/selenium \
    && curl http://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip -o /opt/selenium/chromedriver_linux64.zip \
    && cd /opt/selenium; unzip /opt/selenium/chromedriver_linux64.zip; rm -rf chromedriver_linux64.zip; ln -fs /opt/selenium/chromedriver /usr/local/bin/chromedriver;

# Install Firefox and GeckoDriver
RUN apk add --update --no-cache firefox

# Then install GeckoDriver
RUN wget --no-verbose -O /tmp/geckodriver.tar.gz https://github.com/mozilla/geckodriver/releases/download/v$GECKODRIVER_VERSION/geckodriver-v$GECKODRIVER_VERSION-linux64.tar.gz \
  && rm -rf /opt/geckodriver \
  && tar -C /opt -zxf /tmp/geckodriver.tar.gz \
  && rm /tmp/geckodriver.tar.gz \
  && mv /opt/geckodriver /opt/geckodriver-$GECKODRIVER_VERSION \
  && chmod 755 /opt/geckodriver-$GECKODRIVER_VERSION \
  && ln -fs /opt/geckodriver-$GECKODRIVER_VERSION /usr/bin/geckodriver \
  && ln -fs /opt/geckodriver-$GECKODRIVER_VERSION /usr/bin/wires


USER jenkins
WORKDIR /home/jenkins
